# Generated by Django 2.1.11 on 2019-09-02 06:40

from django.db import migrations


def add_report_all(apps, schema_editor):
    ReportDefinition = apps.get_model('reporting', 'ReportDefinition')
    ReportIndicator = apps.get_model('reporting', 'ReportIndicator')

    # Add one report with all available indicators.
    new_report = ReportDefinition(
        name='Alle wekelijks beschikbare indicatoren',
        description='Alle indicatoren op wekelijkse basis',
        interval='WEEK',
        category='CATEGORY_SUB',
        area='AREA_ALL',
    )
    new_report.save()

    # Add all indicators
    for indicator_code in [
                "CATEGORIE_NAAM",
                "HOOFD_CATEGORIE_NAAM",
                # "P_MELDING_AFGEROND_OP_TIJD",
                "P_MELDING_INTAKE_IN_12H",
                'N_MELDING_NIEUW',
                'N_MELDING_OPEN',
                'N_MELDING_GESLOTEN',
                # "P_MELDING_AFGEROND_3X_SLA",
                'P_MELDING_TEVREDEN',
            ]:
        new_indicator = ReportIndicator(
            report=new_report,
            code=indicator_code,
        )
        new_indicator.save()


def add_report_anonymous_signals(apps, schema_editor):
    ReportDefinition = apps.get_model('reporting', 'ReportDefinition')
    ReportIndicator = apps.get_model('reporting', 'ReportIndicator')

    # Add one report with all available indicators.
    new_report = ReportDefinition(
        name='Wekelijkse telling van wel / niet anonieme meldingen',
        description='Wekelijkse telling van wel / niet anonieme meldingen',
        interval='WEEK',
        category='CATEGORY_SUB',
        area='AREA_ALL',
    )
    new_report.save()

    # Add all indicators
    for indicator_code in [
                "CATEGORIE_NAAM",
                "HOOFD_CATEGORIE_NAAM",
                'N_MELDING_NIEUW_ANONIEM',
                'N_MELDING_NIEUW_NIET_ANONIEM',
                'N_MELDING_NIEUW',
            ]:
        new_indicator = ReportIndicator(
            report=new_report,
            code=indicator_code,
        )
        new_indicator.save()


class Migration(migrations.Migration):

    dependencies = [
        ('reporting', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(add_report_all),
        migrations.RunPython(add_report_anonymous_signals),
    ]
